
controlb_atmega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000008c6  0000095a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000039  00800106  00800106  00000960  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000009fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009c6  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000080c  00000000  00000000  0000142a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004df  00000000  00000000  00001c36  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00002118  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045d  00000000  00000000  000021fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001e2  00000000  00000000  00002659  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000283b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ec       	ldi	r30, 0xC6	; 198
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 33       	cpi	r26, 0x3F	; 63
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  9e:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initUART9600>:
 *  Author: njfg0
 */ 
#include "com_uart.h"
void initUART9600(void){
	//configurar pines tx y rx
	DDRD &=~(1<<DDD0);//entrada
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	8e 7f       	andi	r24, 0xFE	; 254
  aa:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<DDD1);//salida Tx
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	8a b9       	out	0x0a, r24	; 10
	
	//configurar registro A modo fast u2x0 en 1
	UCSR0A=0;
  b2:	e0 ec       	ldi	r30, 0xC0	; 192
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	10 82       	st	Z, r1
	UCSR0A|=(1<<U2X0);
  b8:	80 81       	ld	r24, Z
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	80 83       	st	Z, r24
	
	//configurar registro B, habilotar isr rx, bits para habilitar RX y TX
	UCSR0B=0;
  be:	e1 ec       	ldi	r30, 0xC1	; 193
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	10 82       	st	Z, r1
	UCSR0B|=(1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
  c4:	80 81       	ld	r24, Z
  c6:	88 69       	ori	r24, 0x98	; 152
  c8:	80 83       	st	Z, r24
	
	//Configurar registro C<Frame asincrono 8 bits de datos sin pariedad, 1 bit de stop
	UCSR0C=0;
  ca:	e2 ec       	ldi	r30, 0xC2	; 194
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	10 82       	st	Z, r1
	UCSR0C|=(1<<UCSZ01)|(1<<UCSZ00);
  d0:	80 81       	ld	r24, Z
  d2:	86 60       	ori	r24, 0x06	; 6
  d4:	80 83       	st	Z, r24
	
	//baudrate = 207 con % de error igual a 0.16% con 9600
	UBRR0=207;
  d6:	8f ec       	ldi	r24, 0xCF	; 207
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  de:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  e2:	08 95       	ret

000000e4 <writetxtUART>:
	
}

void writetxtUART(char* texto){
  e4:	ac 01       	movw	r20, r24
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	07 c0       	rjmp	.+14     	; 0xf8 <writetxtUART+0x14>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
  ea:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  ee:	95 ff       	sbrs	r25, 5
  f0:	fc cf       	rjmp	.-8      	; 0xea <writetxtUART+0x6>
		UDR0=texto[i];//cuando i nulo se acaba
  f2:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
}

void writetxtUART(char* texto){
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
  f6:	2f 5f       	subi	r18, 0xFF	; 255
  f8:	fa 01       	movw	r30, r20
  fa:	e2 0f       	add	r30, r18
  fc:	f1 1d       	adc	r31, r1
  fe:	30 81       	ld	r19, Z
 100:	31 11       	cpse	r19, r1
 102:	f3 cf       	rjmp	.-26     	; 0xea <writetxtUART+0x6>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
		UDR0=texto[i];//cuando i nulo se acaba
	}
}
 104:	08 95       	ret

00000106 <ADC_init>:
char control;
char l_control='x';
uint8_t l_boton=2;

void ADC_init(void){
	ADMUX = 0;
 106:	ec e7       	ldi	r30, 0x7C	; 124
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	10 82       	st	Z, r1
	//Vref = AVCC = 5V
	ADMUX |= (1<<REFS0);
 10c:	80 81       	ld	r24, Z
 10e:	80 64       	ori	r24, 0x40	; 64
 110:	80 83       	st	Z, r24
	// Justificado a la izquierda
	ADMUX |= (1<<ADLAR);
 112:	80 81       	ld	r24, Z
 114:	80 62       	ori	r24, 0x20	; 32
 116:	80 83       	st	Z, r24
	
	ADCSRA = 0;
 118:	ea e7       	ldi	r30, 0x7A	; 122
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	10 82       	st	Z, r1
	// Habilitar ADC
	ADCSRA |= (1<<ADEN);
 11e:	80 81       	ld	r24, Z
 120:	80 68       	ori	r24, 0x80	; 128
 122:	80 83       	st	Z, r24
	// Máscara de interrupción del ADC
	ADCSRA |= (1<<ADIE);
 124:	80 81       	ld	r24, Z
 126:	88 60       	ori	r24, 0x08	; 8
 128:	80 83       	st	Z, r24
	// Prescaler del ADC a 128
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 12a:	80 81       	ld	r24, Z
 12c:	87 60       	ori	r24, 0x07	; 7
 12e:	80 83       	st	Z, r24
	
	ADCSRB = 0;
 130:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	
	// El ADC está configurado para correr en modo Single Conversion
	//Iniciar primera conversión
	ADCSRA |= (1<<ADSC);
 134:	80 81       	ld	r24, Z
 136:	80 64       	ori	r24, 0x40	; 64
 138:	80 83       	st	Z, r24
 13a:	08 95       	ret

0000013c <__vector_21>:
}

ISR(ADC_vect){
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	2f 93       	push	r18
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	ef 93       	push	r30
 14e:	ff 93       	push	r31
	uint16_t value=ADC;
 150:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 154:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	if(channel_mux==0){
 158:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <channel_mux>
 15c:	21 11       	cpse	r18, r1
 15e:	0e c0       	rjmp	.+28     	; 0x17c <__vector_21+0x40>
		axis_x=value;
 160:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <axis_x+0x1>
 164:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <axis_x>
		channel_mux=1;
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <channel_mux>
		ADMUX=(ADMUX&0xF0)|1; //A1
 16e:	ec e7       	ldi	r30, 0x7C	; 124
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	80 7f       	andi	r24, 0xF0	; 240
 176:	81 60       	ori	r24, 0x01	; 1
 178:	80 83       	st	Z, r24
 17a:	0b c0       	rjmp	.+22     	; 0x192 <__vector_21+0x56>
		}else{
		axis_y=value;
 17c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <axis_y+0x1>
 180:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <axis_y>
		channel_mux=0;
 184:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <channel_mux>
		ADMUX=(ADMUX&0xF0)|0; //A0
 188:	ec e7       	ldi	r30, 0x7C	; 124
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	80 83       	st	Z, r24
	}
	ADCSRA|=(1<<ADSC);
 192:	ea e7       	ldi	r30, 0x7A	; 122
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	80 64       	ori	r24, 0x40	; 64
 19a:	80 83       	st	Z, r24
}
 19c:	ff 91       	pop	r31
 19e:	ef 91       	pop	r30
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	2f 91       	pop	r18
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <__vector_4>:

ISR(PCINT1_vect){
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	8f 93       	push	r24
	if(!(PINC&(1<<PC2))){
 1bc:	32 99       	sbic	0x06, 2	; 6
 1be:	04 c0       	rjmp	.+8      	; 0x1c8 <__vector_4+0x18>
		boton=1;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <__vector_4+0x1c>
		}else{
		boton=0;
 1c8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
	}
}
 1cc:	8f 91       	pop	r24
 1ce:	0f 90       	pop	r0
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	0f 90       	pop	r0
 1d4:	1f 90       	pop	r1
 1d6:	18 95       	reti

000001d8 <main>:


int main(void)
{
	cli();
 1d8:	f8 94       	cli
	initUART9600();
 1da:	0e 94 53 00 	call	0xa6	; 0xa6 <initUART9600>
	ADC_init();
 1de:	0e 94 83 00 	call	0x106	; 0x106 <ADC_init>
	DDRC&=~(1<<PC2);
 1e2:	87 b1       	in	r24, 0x07	; 7
 1e4:	8b 7f       	andi	r24, 0xFB	; 251
 1e6:	87 b9       	out	0x07, r24	; 7
	PORTC|=(1<<PC2);
 1e8:	88 b1       	in	r24, 0x08	; 8
 1ea:	84 60       	ori	r24, 0x04	; 4
 1ec:	88 b9       	out	0x08, r24	; 8

	PCICR|=(1<<PCIE1);//Habilitar interrupciones del canal c
 1ee:	e8 e6       	ldi	r30, 0x68	; 104
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	82 60       	ori	r24, 0x02	; 2
 1f6:	80 83       	st	Z, r24
	PCMSK1|=(1<<PCINT10);//habilitar interrupción del botón en A2
 1f8:	ec e6       	ldi	r30, 0x6C	; 108
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	84 60       	ori	r24, 0x04	; 4
 200:	80 83       	st	Z, r24
	
	sei();
 202:	78 94       	sei
	/* Replace with your application code */
	while (1)
	{
		if (axis_x >40000) {
 204:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <axis_x>
 208:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <axis_x+0x1>
 20c:	81 34       	cpi	r24, 0x41	; 65
 20e:	9c 49       	sbci	r25, 0x9C	; 156
 210:	20 f0       	brcs	.+8      	; 0x21a <main+0x42>
			control='I';
 212:	89 e4       	ldi	r24, 0x49	; 73
 214:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <control>
 218:	22 c0       	rjmp	.+68     	; 0x25e <main+0x86>
			}else if(axis_x ==0){
 21a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <axis_x>
 21e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <axis_x+0x1>
 222:	89 2b       	or	r24, r25
 224:	21 f4       	brne	.+8      	; 0x22e <main+0x56>
			control='D';
 226:	84 e4       	ldi	r24, 0x44	; 68
 228:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <control>
 22c:	18 c0       	rjmp	.+48     	; 0x25e <main+0x86>
			}else if(axis_y > 40000){
 22e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <axis_y>
 232:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <axis_y+0x1>
 236:	81 34       	cpi	r24, 0x41	; 65
 238:	9c 49       	sbci	r25, 0x9C	; 156
 23a:	20 f0       	brcs	.+8      	; 0x244 <main+0x6c>
			control='A';//arriba
 23c:	81 e4       	ldi	r24, 0x41	; 65
 23e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <control>
 242:	0d c0       	rjmp	.+26     	; 0x25e <main+0x86>
			}else if(axis_y == 0){
 244:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <axis_y>
 248:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <axis_y+0x1>
 24c:	89 2b       	or	r24, r25
 24e:	21 f4       	brne	.+8      	; 0x258 <main+0x80>
			control='B';//abajo
 250:	82 e4       	ldi	r24, 0x42	; 66
 252:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <control>
 256:	03 c0       	rjmp	.+6      	; 0x25e <main+0x86>
			}else{
			control=' ';
 258:	80 e2       	ldi	r24, 0x20	; 32
 25a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <control>
		}
		
		if (boton == 1 && l_boton == 0 && control == ' ') {
 25e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	d9 f4       	brne	.+54     	; 0x29c <main+0xc4>
 266:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 26a:	81 11       	cpse	r24, r1
 26c:	17 c0       	rjmp	.+46     	; 0x29c <main+0xc4>
 26e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <control>
 272:	80 32       	cpi	r24, 0x20	; 32
 274:	99 f4       	brne	.+38     	; 0x29c <main+0xc4>
			sprintf(message, "P\n");
 276:	ed e0       	ldi	r30, 0x0D	; 13
 278:	f1 e0       	ldi	r31, 0x01	; 1
 27a:	80 e5       	ldi	r24, 0x50	; 80
 27c:	9a e0       	ldi	r25, 0x0A	; 10
 27e:	91 83       	std	Z+1, r25	; 0x01
 280:	80 83       	st	Z, r24
 282:	12 82       	std	Z+2, r1	; 0x02
			writetxtUART(message);
 284:	cf 01       	movw	r24, r30
 286:	0e 94 72 00 	call	0xe4	; 0xe4 <writetxtUART>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	94 e3       	ldi	r25, 0x34	; 52
 28e:	2c e0       	ldi	r18, 0x0C	; 12
 290:	81 50       	subi	r24, 0x01	; 1
 292:	90 40       	sbci	r25, 0x00	; 0
 294:	20 40       	sbci	r18, 0x00	; 0
 296:	e1 f7       	brne	.-8      	; 0x290 <main+0xb8>
 298:	00 c0       	rjmp	.+0      	; 0x29a <main+0xc2>
 29a:	00 00       	nop
			_delay_ms(250);
		}
		l_boton = boton;
 29c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 2a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>

		if (control != ' ') {
 2a4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <control>
 2a8:	80 32       	cpi	r24, 0x20	; 32
 2aa:	09 f4       	brne	.+2      	; 0x2ae <main+0xd6>
 2ac:	ab cf       	rjmp	.-170    	; 0x204 <main+0x2c>
			sprintf(message, "%c\n", control);
 2ae:	1f 92       	push	r1
 2b0:	8f 93       	push	r24
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	9f 93       	push	r25
 2b8:	8f 93       	push	r24
 2ba:	8d e0       	ldi	r24, 0x0D	; 13
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	9f 93       	push	r25
 2c0:	8f 93       	push	r24
 2c2:	0e 94 77 01 	call	0x2ee	; 0x2ee <sprintf>
			writetxtUART(message);
 2c6:	8d e0       	ldi	r24, 0x0D	; 13
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	0e 94 72 00 	call	0xe4	; 0xe4 <writetxtUART>
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	94 e3       	ldi	r25, 0x34	; 52
 2d2:	2c e0       	ldi	r18, 0x0C	; 12
 2d4:	81 50       	subi	r24, 0x01	; 1
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	20 40       	sbci	r18, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0xfc>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x106>
 2de:	00 00       	nop
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	8b cf       	rjmp	.-234    	; 0x204 <main+0x2c>

000002ee <sprintf>:
 2ee:	ae e0       	ldi	r26, 0x0E	; 14
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	ed e7       	ldi	r30, 0x7D	; 125
 2f4:	f1 e0       	ldi	r31, 0x01	; 1
 2f6:	0c 94 38 04 	jmp	0x870	; 0x870 <__prologue_saves__+0x1c>
 2fa:	0d 89       	ldd	r16, Y+21	; 0x15
 2fc:	1e 89       	ldd	r17, Y+22	; 0x16
 2fe:	86 e0       	ldi	r24, 0x06	; 6
 300:	8c 83       	std	Y+4, r24	; 0x04
 302:	1a 83       	std	Y+2, r17	; 0x02
 304:	09 83       	std	Y+1, r16	; 0x01
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	9f e7       	ldi	r25, 0x7F	; 127
 30a:	9e 83       	std	Y+6, r25	; 0x06
 30c:	8d 83       	std	Y+5, r24	; 0x05
 30e:	ae 01       	movw	r20, r28
 310:	47 5e       	subi	r20, 0xE7	; 231
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	6f 89       	ldd	r22, Y+23	; 0x17
 316:	78 8d       	ldd	r23, Y+24	; 0x18
 318:	ce 01       	movw	r24, r28
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	0e 94 99 01 	call	0x332	; 0x332 <vfprintf>
 320:	ef 81       	ldd	r30, Y+7	; 0x07
 322:	f8 85       	ldd	r31, Y+8	; 0x08
 324:	e0 0f       	add	r30, r16
 326:	f1 1f       	adc	r31, r17
 328:	10 82       	st	Z, r1
 32a:	2e 96       	adiw	r28, 0x0e	; 14
 32c:	e4 e0       	ldi	r30, 0x04	; 4
 32e:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__epilogue_restores__+0x1c>

00000332 <vfprintf>:
 332:	ab e0       	ldi	r26, 0x0B	; 11
 334:	b0 e0       	ldi	r27, 0x00	; 0
 336:	ef e9       	ldi	r30, 0x9F	; 159
 338:	f1 e0       	ldi	r31, 0x01	; 1
 33a:	0c 94 2a 04 	jmp	0x854	; 0x854 <__prologue_saves__>
 33e:	6c 01       	movw	r12, r24
 340:	7b 01       	movw	r14, r22
 342:	8a 01       	movw	r16, r20
 344:	fc 01       	movw	r30, r24
 346:	17 82       	std	Z+7, r1	; 0x07
 348:	16 82       	std	Z+6, r1	; 0x06
 34a:	83 81       	ldd	r24, Z+3	; 0x03
 34c:	81 ff       	sbrs	r24, 1
 34e:	cc c1       	rjmp	.+920    	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 350:	ce 01       	movw	r24, r28
 352:	01 96       	adiw	r24, 0x01	; 1
 354:	3c 01       	movw	r6, r24
 356:	f6 01       	movw	r30, r12
 358:	93 81       	ldd	r25, Z+3	; 0x03
 35a:	f7 01       	movw	r30, r14
 35c:	93 fd       	sbrc	r25, 3
 35e:	85 91       	lpm	r24, Z+
 360:	93 ff       	sbrs	r25, 3
 362:	81 91       	ld	r24, Z+
 364:	7f 01       	movw	r14, r30
 366:	88 23       	and	r24, r24
 368:	09 f4       	brne	.+2      	; 0x36c <vfprintf+0x3a>
 36a:	ba c1       	rjmp	.+884    	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 36c:	85 32       	cpi	r24, 0x25	; 37
 36e:	39 f4       	brne	.+14     	; 0x37e <vfprintf+0x4c>
 370:	93 fd       	sbrc	r25, 3
 372:	85 91       	lpm	r24, Z+
 374:	93 ff       	sbrs	r25, 3
 376:	81 91       	ld	r24, Z+
 378:	7f 01       	movw	r14, r30
 37a:	85 32       	cpi	r24, 0x25	; 37
 37c:	29 f4       	brne	.+10     	; 0x388 <vfprintf+0x56>
 37e:	b6 01       	movw	r22, r12
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 386:	e7 cf       	rjmp	.-50     	; 0x356 <vfprintf+0x24>
 388:	91 2c       	mov	r9, r1
 38a:	21 2c       	mov	r2, r1
 38c:	31 2c       	mov	r3, r1
 38e:	ff e1       	ldi	r31, 0x1F	; 31
 390:	f3 15       	cp	r31, r3
 392:	d8 f0       	brcs	.+54     	; 0x3ca <vfprintf+0x98>
 394:	8b 32       	cpi	r24, 0x2B	; 43
 396:	79 f0       	breq	.+30     	; 0x3b6 <vfprintf+0x84>
 398:	38 f4       	brcc	.+14     	; 0x3a8 <vfprintf+0x76>
 39a:	80 32       	cpi	r24, 0x20	; 32
 39c:	79 f0       	breq	.+30     	; 0x3bc <vfprintf+0x8a>
 39e:	83 32       	cpi	r24, 0x23	; 35
 3a0:	a1 f4       	brne	.+40     	; 0x3ca <vfprintf+0x98>
 3a2:	23 2d       	mov	r18, r3
 3a4:	20 61       	ori	r18, 0x10	; 16
 3a6:	1d c0       	rjmp	.+58     	; 0x3e2 <vfprintf+0xb0>
 3a8:	8d 32       	cpi	r24, 0x2D	; 45
 3aa:	61 f0       	breq	.+24     	; 0x3c4 <vfprintf+0x92>
 3ac:	80 33       	cpi	r24, 0x30	; 48
 3ae:	69 f4       	brne	.+26     	; 0x3ca <vfprintf+0x98>
 3b0:	23 2d       	mov	r18, r3
 3b2:	21 60       	ori	r18, 0x01	; 1
 3b4:	16 c0       	rjmp	.+44     	; 0x3e2 <vfprintf+0xb0>
 3b6:	83 2d       	mov	r24, r3
 3b8:	82 60       	ori	r24, 0x02	; 2
 3ba:	38 2e       	mov	r3, r24
 3bc:	e3 2d       	mov	r30, r3
 3be:	e4 60       	ori	r30, 0x04	; 4
 3c0:	3e 2e       	mov	r3, r30
 3c2:	2a c0       	rjmp	.+84     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3c4:	f3 2d       	mov	r31, r3
 3c6:	f8 60       	ori	r31, 0x08	; 8
 3c8:	1d c0       	rjmp	.+58     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3ca:	37 fc       	sbrc	r3, 7
 3cc:	2d c0       	rjmp	.+90     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ce:	20 ed       	ldi	r18, 0xD0	; 208
 3d0:	28 0f       	add	r18, r24
 3d2:	2a 30       	cpi	r18, 0x0A	; 10
 3d4:	40 f0       	brcs	.+16     	; 0x3e6 <vfprintf+0xb4>
 3d6:	8e 32       	cpi	r24, 0x2E	; 46
 3d8:	b9 f4       	brne	.+46     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3da:	36 fc       	sbrc	r3, 6
 3dc:	81 c1       	rjmp	.+770    	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 3de:	23 2d       	mov	r18, r3
 3e0:	20 64       	ori	r18, 0x40	; 64
 3e2:	32 2e       	mov	r3, r18
 3e4:	19 c0       	rjmp	.+50     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3e6:	36 fe       	sbrs	r3, 6
 3e8:	06 c0       	rjmp	.+12     	; 0x3f6 <vfprintf+0xc4>
 3ea:	8a e0       	ldi	r24, 0x0A	; 10
 3ec:	98 9e       	mul	r9, r24
 3ee:	20 0d       	add	r18, r0
 3f0:	11 24       	eor	r1, r1
 3f2:	92 2e       	mov	r9, r18
 3f4:	11 c0       	rjmp	.+34     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3f6:	ea e0       	ldi	r30, 0x0A	; 10
 3f8:	2e 9e       	mul	r2, r30
 3fa:	20 0d       	add	r18, r0
 3fc:	11 24       	eor	r1, r1
 3fe:	22 2e       	mov	r2, r18
 400:	f3 2d       	mov	r31, r3
 402:	f0 62       	ori	r31, 0x20	; 32
 404:	3f 2e       	mov	r3, r31
 406:	08 c0       	rjmp	.+16     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 408:	8c 36       	cpi	r24, 0x6C	; 108
 40a:	21 f4       	brne	.+8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 40c:	83 2d       	mov	r24, r3
 40e:	80 68       	ori	r24, 0x80	; 128
 410:	38 2e       	mov	r3, r24
 412:	02 c0       	rjmp	.+4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 414:	88 36       	cpi	r24, 0x68	; 104
 416:	41 f4       	brne	.+16     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 418:	f7 01       	movw	r30, r14
 41a:	93 fd       	sbrc	r25, 3
 41c:	85 91       	lpm	r24, Z+
 41e:	93 ff       	sbrs	r25, 3
 420:	81 91       	ld	r24, Z+
 422:	7f 01       	movw	r14, r30
 424:	81 11       	cpse	r24, r1
 426:	b3 cf       	rjmp	.-154    	; 0x38e <vfprintf+0x5c>
 428:	98 2f       	mov	r25, r24
 42a:	9f 7d       	andi	r25, 0xDF	; 223
 42c:	95 54       	subi	r25, 0x45	; 69
 42e:	93 30       	cpi	r25, 0x03	; 3
 430:	28 f4       	brcc	.+10     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 432:	0c 5f       	subi	r16, 0xFC	; 252
 434:	1f 4f       	sbci	r17, 0xFF	; 255
 436:	9f e3       	ldi	r25, 0x3F	; 63
 438:	99 83       	std	Y+1, r25	; 0x01
 43a:	0d c0       	rjmp	.+26     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 43c:	83 36       	cpi	r24, 0x63	; 99
 43e:	31 f0       	breq	.+12     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 440:	83 37       	cpi	r24, 0x73	; 115
 442:	71 f0       	breq	.+28     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 444:	83 35       	cpi	r24, 0x53	; 83
 446:	09 f0       	breq	.+2      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 448:	59 c0       	rjmp	.+178    	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 44a:	21 c0       	rjmp	.+66     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 44c:	f8 01       	movw	r30, r16
 44e:	80 81       	ld	r24, Z
 450:	89 83       	std	Y+1, r24	; 0x01
 452:	0e 5f       	subi	r16, 0xFE	; 254
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	88 24       	eor	r8, r8
 458:	83 94       	inc	r8
 45a:	91 2c       	mov	r9, r1
 45c:	53 01       	movw	r10, r6
 45e:	13 c0       	rjmp	.+38     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 460:	28 01       	movw	r4, r16
 462:	f2 e0       	ldi	r31, 0x02	; 2
 464:	4f 0e       	add	r4, r31
 466:	51 1c       	adc	r5, r1
 468:	f8 01       	movw	r30, r16
 46a:	a0 80       	ld	r10, Z
 46c:	b1 80       	ldd	r11, Z+1	; 0x01
 46e:	36 fe       	sbrs	r3, 6
 470:	03 c0       	rjmp	.+6      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 472:	69 2d       	mov	r22, r9
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	02 c0       	rjmp	.+4      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 478:	6f ef       	ldi	r22, 0xFF	; 255
 47a:	7f ef       	ldi	r23, 0xFF	; 255
 47c:	c5 01       	movw	r24, r10
 47e:	0e 94 85 03 	call	0x70a	; 0x70a <strnlen>
 482:	4c 01       	movw	r8, r24
 484:	82 01       	movw	r16, r4
 486:	f3 2d       	mov	r31, r3
 488:	ff 77       	andi	r31, 0x7F	; 127
 48a:	3f 2e       	mov	r3, r31
 48c:	16 c0       	rjmp	.+44     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 48e:	28 01       	movw	r4, r16
 490:	22 e0       	ldi	r18, 0x02	; 2
 492:	42 0e       	add	r4, r18
 494:	51 1c       	adc	r5, r1
 496:	f8 01       	movw	r30, r16
 498:	a0 80       	ld	r10, Z
 49a:	b1 80       	ldd	r11, Z+1	; 0x01
 49c:	36 fe       	sbrs	r3, 6
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a0:	69 2d       	mov	r22, r9
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a6:	6f ef       	ldi	r22, 0xFF	; 255
 4a8:	7f ef       	ldi	r23, 0xFF	; 255
 4aa:	c5 01       	movw	r24, r10
 4ac:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <strnlen_P>
 4b0:	4c 01       	movw	r8, r24
 4b2:	f3 2d       	mov	r31, r3
 4b4:	f0 68       	ori	r31, 0x80	; 128
 4b6:	3f 2e       	mov	r3, r31
 4b8:	82 01       	movw	r16, r4
 4ba:	33 fc       	sbrc	r3, 3
 4bc:	1b c0       	rjmp	.+54     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4be:	82 2d       	mov	r24, r2
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	88 16       	cp	r8, r24
 4c4:	99 06       	cpc	r9, r25
 4c6:	b0 f4       	brcc	.+44     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4c8:	b6 01       	movw	r22, r12
 4ca:	80 e2       	ldi	r24, 0x20	; 32
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 4d2:	2a 94       	dec	r2
 4d4:	f4 cf       	rjmp	.-24     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4d6:	f5 01       	movw	r30, r10
 4d8:	37 fc       	sbrc	r3, 7
 4da:	85 91       	lpm	r24, Z+
 4dc:	37 fe       	sbrs	r3, 7
 4de:	81 91       	ld	r24, Z+
 4e0:	5f 01       	movw	r10, r30
 4e2:	b6 01       	movw	r22, r12
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 4ea:	21 10       	cpse	r2, r1
 4ec:	2a 94       	dec	r2
 4ee:	21 e0       	ldi	r18, 0x01	; 1
 4f0:	82 1a       	sub	r8, r18
 4f2:	91 08       	sbc	r9, r1
 4f4:	81 14       	cp	r8, r1
 4f6:	91 04       	cpc	r9, r1
 4f8:	71 f7       	brne	.-36     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4fa:	e8 c0       	rjmp	.+464    	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 4fc:	84 36       	cpi	r24, 0x64	; 100
 4fe:	11 f0       	breq	.+4      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 500:	89 36       	cpi	r24, 0x69	; 105
 502:	41 f5       	brne	.+80     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 504:	f8 01       	movw	r30, r16
 506:	37 fe       	sbrs	r3, 7
 508:	07 c0       	rjmp	.+14     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 50a:	60 81       	ld	r22, Z
 50c:	71 81       	ldd	r23, Z+1	; 0x01
 50e:	82 81       	ldd	r24, Z+2	; 0x02
 510:	93 81       	ldd	r25, Z+3	; 0x03
 512:	0c 5f       	subi	r16, 0xFC	; 252
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	08 c0       	rjmp	.+16     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 518:	60 81       	ld	r22, Z
 51a:	71 81       	ldd	r23, Z+1	; 0x01
 51c:	07 2e       	mov	r0, r23
 51e:	00 0c       	add	r0, r0
 520:	88 0b       	sbc	r24, r24
 522:	99 0b       	sbc	r25, r25
 524:	0e 5f       	subi	r16, 0xFE	; 254
 526:	1f 4f       	sbci	r17, 0xFF	; 255
 528:	f3 2d       	mov	r31, r3
 52a:	ff 76       	andi	r31, 0x6F	; 111
 52c:	3f 2e       	mov	r3, r31
 52e:	97 ff       	sbrs	r25, 7
 530:	09 c0       	rjmp	.+18     	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	f0 68       	ori	r31, 0x80	; 128
 542:	3f 2e       	mov	r3, r31
 544:	2a e0       	ldi	r18, 0x0A	; 10
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	a3 01       	movw	r20, r6
 54a:	0e 94 cc 03 	call	0x798	; 0x798 <__ultoa_invert>
 54e:	88 2e       	mov	r8, r24
 550:	86 18       	sub	r8, r6
 552:	45 c0       	rjmp	.+138    	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 554:	85 37       	cpi	r24, 0x75	; 117
 556:	31 f4       	brne	.+12     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 558:	23 2d       	mov	r18, r3
 55a:	2f 7e       	andi	r18, 0xEF	; 239
 55c:	b2 2e       	mov	r11, r18
 55e:	2a e0       	ldi	r18, 0x0A	; 10
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	25 c0       	rjmp	.+74     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 564:	93 2d       	mov	r25, r3
 566:	99 7f       	andi	r25, 0xF9	; 249
 568:	b9 2e       	mov	r11, r25
 56a:	8f 36       	cpi	r24, 0x6F	; 111
 56c:	c1 f0       	breq	.+48     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 56e:	18 f4       	brcc	.+6      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 570:	88 35       	cpi	r24, 0x58	; 88
 572:	79 f0       	breq	.+30     	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 574:	b5 c0       	rjmp	.+362    	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 576:	80 37       	cpi	r24, 0x70	; 112
 578:	19 f0       	breq	.+6      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 57a:	88 37       	cpi	r24, 0x78	; 120
 57c:	21 f0       	breq	.+8      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 57e:	b0 c0       	rjmp	.+352    	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 580:	e9 2f       	mov	r30, r25
 582:	e0 61       	ori	r30, 0x10	; 16
 584:	be 2e       	mov	r11, r30
 586:	b4 fe       	sbrs	r11, 4
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 58a:	fb 2d       	mov	r31, r11
 58c:	f4 60       	ori	r31, 0x04	; 4
 58e:	bf 2e       	mov	r11, r31
 590:	09 c0       	rjmp	.+18     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 592:	34 fe       	sbrs	r3, 4
 594:	0a c0       	rjmp	.+20     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 596:	29 2f       	mov	r18, r25
 598:	26 60       	ori	r18, 0x06	; 6
 59a:	b2 2e       	mov	r11, r18
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 59e:	28 e0       	ldi	r18, 0x08	; 8
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	05 c0       	rjmp	.+10     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5a4:	20 e1       	ldi	r18, 0x10	; 16
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5aa:	20 e1       	ldi	r18, 0x10	; 16
 5ac:	32 e0       	ldi	r19, 0x02	; 2
 5ae:	f8 01       	movw	r30, r16
 5b0:	b7 fe       	sbrs	r11, 7
 5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5b4:	60 81       	ld	r22, Z
 5b6:	71 81       	ldd	r23, Z+1	; 0x01
 5b8:	82 81       	ldd	r24, Z+2	; 0x02
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	0c 5f       	subi	r16, 0xFC	; 252
 5be:	1f 4f       	sbci	r17, 0xFF	; 255
 5c0:	06 c0       	rjmp	.+12     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5c2:	60 81       	ld	r22, Z
 5c4:	71 81       	ldd	r23, Z+1	; 0x01
 5c6:	80 e0       	ldi	r24, 0x00	; 0
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 5f       	subi	r16, 0xFE	; 254
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	a3 01       	movw	r20, r6
 5d0:	0e 94 cc 03 	call	0x798	; 0x798 <__ultoa_invert>
 5d4:	88 2e       	mov	r8, r24
 5d6:	86 18       	sub	r8, r6
 5d8:	fb 2d       	mov	r31, r11
 5da:	ff 77       	andi	r31, 0x7F	; 127
 5dc:	3f 2e       	mov	r3, r31
 5de:	36 fe       	sbrs	r3, 6
 5e0:	0d c0       	rjmp	.+26     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5e2:	23 2d       	mov	r18, r3
 5e4:	2e 7f       	andi	r18, 0xFE	; 254
 5e6:	a2 2e       	mov	r10, r18
 5e8:	89 14       	cp	r8, r9
 5ea:	58 f4       	brcc	.+22     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5ec:	34 fe       	sbrs	r3, 4
 5ee:	0b c0       	rjmp	.+22     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5f0:	32 fc       	sbrc	r3, 2
 5f2:	09 c0       	rjmp	.+18     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5f4:	83 2d       	mov	r24, r3
 5f6:	8e 7e       	andi	r24, 0xEE	; 238
 5f8:	a8 2e       	mov	r10, r24
 5fa:	05 c0       	rjmp	.+10     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5fc:	b8 2c       	mov	r11, r8
 5fe:	a3 2c       	mov	r10, r3
 600:	03 c0       	rjmp	.+6      	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 602:	b8 2c       	mov	r11, r8
 604:	01 c0       	rjmp	.+2      	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 606:	b9 2c       	mov	r11, r9
 608:	a4 fe       	sbrs	r10, 4
 60a:	0f c0       	rjmp	.+30     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 60c:	fe 01       	movw	r30, r28
 60e:	e8 0d       	add	r30, r8
 610:	f1 1d       	adc	r31, r1
 612:	80 81       	ld	r24, Z
 614:	80 33       	cpi	r24, 0x30	; 48
 616:	21 f4       	brne	.+8      	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 618:	9a 2d       	mov	r25, r10
 61a:	99 7e       	andi	r25, 0xE9	; 233
 61c:	a9 2e       	mov	r10, r25
 61e:	09 c0       	rjmp	.+18     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 620:	a2 fe       	sbrs	r10, 2
 622:	06 c0       	rjmp	.+12     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 624:	b3 94       	inc	r11
 626:	b3 94       	inc	r11
 628:	04 c0       	rjmp	.+8      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 62a:	8a 2d       	mov	r24, r10
 62c:	86 78       	andi	r24, 0x86	; 134
 62e:	09 f0       	breq	.+2      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 630:	b3 94       	inc	r11
 632:	a3 fc       	sbrc	r10, 3
 634:	11 c0       	rjmp	.+34     	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
 636:	a0 fe       	sbrs	r10, 0
 638:	06 c0       	rjmp	.+12     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 63a:	b2 14       	cp	r11, r2
 63c:	88 f4       	brcc	.+34     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 63e:	28 0c       	add	r2, r8
 640:	92 2c       	mov	r9, r2
 642:	9b 18       	sub	r9, r11
 644:	0e c0       	rjmp	.+28     	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 646:	b2 14       	cp	r11, r2
 648:	60 f4       	brcc	.+24     	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 64a:	b6 01       	movw	r22, r12
 64c:	80 e2       	ldi	r24, 0x20	; 32
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 654:	b3 94       	inc	r11
 656:	f7 cf       	rjmp	.-18     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 658:	b2 14       	cp	r11, r2
 65a:	18 f4       	brcc	.+6      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 65c:	2b 18       	sub	r2, r11
 65e:	02 c0       	rjmp	.+4      	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 660:	98 2c       	mov	r9, r8
 662:	21 2c       	mov	r2, r1
 664:	a4 fe       	sbrs	r10, 4
 666:	10 c0       	rjmp	.+32     	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 668:	b6 01       	movw	r22, r12
 66a:	80 e3       	ldi	r24, 0x30	; 48
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 672:	a2 fe       	sbrs	r10, 2
 674:	17 c0       	rjmp	.+46     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 676:	a1 fc       	sbrc	r10, 1
 678:	03 c0       	rjmp	.+6      	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 67a:	88 e7       	ldi	r24, 0x78	; 120
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
 680:	88 e5       	ldi	r24, 0x58	; 88
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	b6 01       	movw	r22, r12
 686:	0c c0       	rjmp	.+24     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 688:	8a 2d       	mov	r24, r10
 68a:	86 78       	andi	r24, 0x86	; 134
 68c:	59 f0       	breq	.+22     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 68e:	a1 fe       	sbrs	r10, 1
 690:	02 c0       	rjmp	.+4      	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 692:	8b e2       	ldi	r24, 0x2B	; 43
 694:	01 c0       	rjmp	.+2      	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	a7 fc       	sbrc	r10, 7
 69a:	8d e2       	ldi	r24, 0x2D	; 45
 69c:	b6 01       	movw	r22, r12
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 6a4:	89 14       	cp	r8, r9
 6a6:	38 f4       	brcc	.+14     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 6a8:	b6 01       	movw	r22, r12
 6aa:	80 e3       	ldi	r24, 0x30	; 48
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 6b2:	9a 94       	dec	r9
 6b4:	f7 cf       	rjmp	.-18     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 6b6:	8a 94       	dec	r8
 6b8:	f3 01       	movw	r30, r6
 6ba:	e8 0d       	add	r30, r8
 6bc:	f1 1d       	adc	r31, r1
 6be:	80 81       	ld	r24, Z
 6c0:	b6 01       	movw	r22, r12
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 6c8:	81 10       	cpse	r8, r1
 6ca:	f5 cf       	rjmp	.-22     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 6cc:	22 20       	and	r2, r2
 6ce:	09 f4       	brne	.+2      	; 0x6d2 <__EEPROM_REGION_LENGTH__+0x2d2>
 6d0:	42 ce       	rjmp	.-892    	; 0x356 <vfprintf+0x24>
 6d2:	b6 01       	movw	r22, r12
 6d4:	80 e2       	ldi	r24, 0x20	; 32
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 90 03 	call	0x720	; 0x720 <fputc>
 6dc:	2a 94       	dec	r2
 6de:	f6 cf       	rjmp	.-20     	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 6e0:	f6 01       	movw	r30, r12
 6e2:	86 81       	ldd	r24, Z+6	; 0x06
 6e4:	97 81       	ldd	r25, Z+7	; 0x07
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 6e8:	8f ef       	ldi	r24, 0xFF	; 255
 6ea:	9f ef       	ldi	r25, 0xFF	; 255
 6ec:	2b 96       	adiw	r28, 0x0b	; 11
 6ee:	e2 e1       	ldi	r30, 0x12	; 18
 6f0:	0c 94 46 04 	jmp	0x88c	; 0x88c <__epilogue_restores__>

000006f4 <strnlen_P>:
 6f4:	fc 01       	movw	r30, r24
 6f6:	05 90       	lpm	r0, Z+
 6f8:	61 50       	subi	r22, 0x01	; 1
 6fa:	70 40       	sbci	r23, 0x00	; 0
 6fc:	01 10       	cpse	r0, r1
 6fe:	d8 f7       	brcc	.-10     	; 0x6f6 <strnlen_P+0x2>
 700:	80 95       	com	r24
 702:	90 95       	com	r25
 704:	8e 0f       	add	r24, r30
 706:	9f 1f       	adc	r25, r31
 708:	08 95       	ret

0000070a <strnlen>:
 70a:	fc 01       	movw	r30, r24
 70c:	61 50       	subi	r22, 0x01	; 1
 70e:	70 40       	sbci	r23, 0x00	; 0
 710:	01 90       	ld	r0, Z+
 712:	01 10       	cpse	r0, r1
 714:	d8 f7       	brcc	.-10     	; 0x70c <strnlen+0x2>
 716:	80 95       	com	r24
 718:	90 95       	com	r25
 71a:	8e 0f       	add	r24, r30
 71c:	9f 1f       	adc	r25, r31
 71e:	08 95       	ret

00000720 <fputc>:
 720:	0f 93       	push	r16
 722:	1f 93       	push	r17
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	fb 01       	movw	r30, r22
 72a:	23 81       	ldd	r18, Z+3	; 0x03
 72c:	21 fd       	sbrc	r18, 1
 72e:	03 c0       	rjmp	.+6      	; 0x736 <fputc+0x16>
 730:	8f ef       	ldi	r24, 0xFF	; 255
 732:	9f ef       	ldi	r25, 0xFF	; 255
 734:	2c c0       	rjmp	.+88     	; 0x78e <fputc+0x6e>
 736:	22 ff       	sbrs	r18, 2
 738:	16 c0       	rjmp	.+44     	; 0x766 <fputc+0x46>
 73a:	46 81       	ldd	r20, Z+6	; 0x06
 73c:	57 81       	ldd	r21, Z+7	; 0x07
 73e:	24 81       	ldd	r18, Z+4	; 0x04
 740:	35 81       	ldd	r19, Z+5	; 0x05
 742:	42 17       	cp	r20, r18
 744:	53 07       	cpc	r21, r19
 746:	44 f4       	brge	.+16     	; 0x758 <fputc+0x38>
 748:	a0 81       	ld	r26, Z
 74a:	b1 81       	ldd	r27, Z+1	; 0x01
 74c:	9d 01       	movw	r18, r26
 74e:	2f 5f       	subi	r18, 0xFF	; 255
 750:	3f 4f       	sbci	r19, 0xFF	; 255
 752:	31 83       	std	Z+1, r19	; 0x01
 754:	20 83       	st	Z, r18
 756:	8c 93       	st	X, r24
 758:	26 81       	ldd	r18, Z+6	; 0x06
 75a:	37 81       	ldd	r19, Z+7	; 0x07
 75c:	2f 5f       	subi	r18, 0xFF	; 255
 75e:	3f 4f       	sbci	r19, 0xFF	; 255
 760:	37 83       	std	Z+7, r19	; 0x07
 762:	26 83       	std	Z+6, r18	; 0x06
 764:	14 c0       	rjmp	.+40     	; 0x78e <fputc+0x6e>
 766:	8b 01       	movw	r16, r22
 768:	ec 01       	movw	r28, r24
 76a:	fb 01       	movw	r30, r22
 76c:	00 84       	ldd	r0, Z+8	; 0x08
 76e:	f1 85       	ldd	r31, Z+9	; 0x09
 770:	e0 2d       	mov	r30, r0
 772:	09 95       	icall
 774:	89 2b       	or	r24, r25
 776:	e1 f6       	brne	.-72     	; 0x730 <fputc+0x10>
 778:	d8 01       	movw	r26, r16
 77a:	16 96       	adiw	r26, 0x06	; 6
 77c:	8d 91       	ld	r24, X+
 77e:	9c 91       	ld	r25, X
 780:	17 97       	sbiw	r26, 0x07	; 7
 782:	01 96       	adiw	r24, 0x01	; 1
 784:	17 96       	adiw	r26, 0x07	; 7
 786:	9c 93       	st	X, r25
 788:	8e 93       	st	-X, r24
 78a:	16 97       	sbiw	r26, 0x06	; 6
 78c:	ce 01       	movw	r24, r28
 78e:	df 91       	pop	r29
 790:	cf 91       	pop	r28
 792:	1f 91       	pop	r17
 794:	0f 91       	pop	r16
 796:	08 95       	ret

00000798 <__ultoa_invert>:
 798:	fa 01       	movw	r30, r20
 79a:	aa 27       	eor	r26, r26
 79c:	28 30       	cpi	r18, 0x08	; 8
 79e:	51 f1       	breq	.+84     	; 0x7f4 <__ultoa_invert+0x5c>
 7a0:	20 31       	cpi	r18, 0x10	; 16
 7a2:	81 f1       	breq	.+96     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7a4:	e8 94       	clt
 7a6:	6f 93       	push	r22
 7a8:	6e 7f       	andi	r22, 0xFE	; 254
 7aa:	6e 5f       	subi	r22, 0xFE	; 254
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	af 4f       	sbci	r26, 0xFF	; 255
 7b4:	b1 e0       	ldi	r27, 0x01	; 1
 7b6:	3e d0       	rcall	.+124    	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7b8:	b4 e0       	ldi	r27, 0x04	; 4
 7ba:	3c d0       	rcall	.+120    	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7bc:	67 0f       	add	r22, r23
 7be:	78 1f       	adc	r23, r24
 7c0:	89 1f       	adc	r24, r25
 7c2:	9a 1f       	adc	r25, r26
 7c4:	a1 1d       	adc	r26, r1
 7c6:	68 0f       	add	r22, r24
 7c8:	79 1f       	adc	r23, r25
 7ca:	8a 1f       	adc	r24, r26
 7cc:	91 1d       	adc	r25, r1
 7ce:	a1 1d       	adc	r26, r1
 7d0:	6a 0f       	add	r22, r26
 7d2:	71 1d       	adc	r23, r1
 7d4:	81 1d       	adc	r24, r1
 7d6:	91 1d       	adc	r25, r1
 7d8:	a1 1d       	adc	r26, r1
 7da:	20 d0       	rcall	.+64     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 7dc:	09 f4       	brne	.+2      	; 0x7e0 <__ultoa_invert+0x48>
 7de:	68 94       	set
 7e0:	3f 91       	pop	r19
 7e2:	2a e0       	ldi	r18, 0x0A	; 10
 7e4:	26 9f       	mul	r18, r22
 7e6:	11 24       	eor	r1, r1
 7e8:	30 19       	sub	r19, r0
 7ea:	30 5d       	subi	r19, 0xD0	; 208
 7ec:	31 93       	st	Z+, r19
 7ee:	de f6       	brtc	.-74     	; 0x7a6 <__ultoa_invert+0xe>
 7f0:	cf 01       	movw	r24, r30
 7f2:	08 95       	ret
 7f4:	46 2f       	mov	r20, r22
 7f6:	47 70       	andi	r20, 0x07	; 7
 7f8:	40 5d       	subi	r20, 0xD0	; 208
 7fa:	41 93       	st	Z+, r20
 7fc:	b3 e0       	ldi	r27, 0x03	; 3
 7fe:	0f d0       	rcall	.+30     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 800:	c9 f7       	brne	.-14     	; 0x7f4 <__ultoa_invert+0x5c>
 802:	f6 cf       	rjmp	.-20     	; 0x7f0 <__ultoa_invert+0x58>
 804:	46 2f       	mov	r20, r22
 806:	4f 70       	andi	r20, 0x0F	; 15
 808:	40 5d       	subi	r20, 0xD0	; 208
 80a:	4a 33       	cpi	r20, 0x3A	; 58
 80c:	18 f0       	brcs	.+6      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 80e:	49 5d       	subi	r20, 0xD9	; 217
 810:	31 fd       	sbrc	r19, 1
 812:	40 52       	subi	r20, 0x20	; 32
 814:	41 93       	st	Z+, r20
 816:	02 d0       	rcall	.+4      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 818:	a9 f7       	brne	.-22     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 81a:	ea cf       	rjmp	.-44     	; 0x7f0 <__ultoa_invert+0x58>
 81c:	b4 e0       	ldi	r27, 0x04	; 4
 81e:	a6 95       	lsr	r26
 820:	97 95       	ror	r25
 822:	87 95       	ror	r24
 824:	77 95       	ror	r23
 826:	67 95       	ror	r22
 828:	ba 95       	dec	r27
 82a:	c9 f7       	brne	.-14     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 82c:	00 97       	sbiw	r24, 0x00	; 0
 82e:	61 05       	cpc	r22, r1
 830:	71 05       	cpc	r23, r1
 832:	08 95       	ret
 834:	9b 01       	movw	r18, r22
 836:	ac 01       	movw	r20, r24
 838:	0a 2e       	mov	r0, r26
 83a:	06 94       	lsr	r0
 83c:	57 95       	ror	r21
 83e:	47 95       	ror	r20
 840:	37 95       	ror	r19
 842:	27 95       	ror	r18
 844:	ba 95       	dec	r27
 846:	c9 f7       	brne	.-14     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 848:	62 0f       	add	r22, r18
 84a:	73 1f       	adc	r23, r19
 84c:	84 1f       	adc	r24, r20
 84e:	95 1f       	adc	r25, r21
 850:	a0 1d       	adc	r26, r0
 852:	08 95       	ret

00000854 <__prologue_saves__>:
 854:	2f 92       	push	r2
 856:	3f 92       	push	r3
 858:	4f 92       	push	r4
 85a:	5f 92       	push	r5
 85c:	6f 92       	push	r6
 85e:	7f 92       	push	r7
 860:	8f 92       	push	r8
 862:	9f 92       	push	r9
 864:	af 92       	push	r10
 866:	bf 92       	push	r11
 868:	cf 92       	push	r12
 86a:	df 92       	push	r13
 86c:	ef 92       	push	r14
 86e:	ff 92       	push	r15
 870:	0f 93       	push	r16
 872:	1f 93       	push	r17
 874:	cf 93       	push	r28
 876:	df 93       	push	r29
 878:	cd b7       	in	r28, 0x3d	; 61
 87a:	de b7       	in	r29, 0x3e	; 62
 87c:	ca 1b       	sub	r28, r26
 87e:	db 0b       	sbc	r29, r27
 880:	0f b6       	in	r0, 0x3f	; 63
 882:	f8 94       	cli
 884:	de bf       	out	0x3e, r29	; 62
 886:	0f be       	out	0x3f, r0	; 63
 888:	cd bf       	out	0x3d, r28	; 61
 88a:	09 94       	ijmp

0000088c <__epilogue_restores__>:
 88c:	2a 88       	ldd	r2, Y+18	; 0x12
 88e:	39 88       	ldd	r3, Y+17	; 0x11
 890:	48 88       	ldd	r4, Y+16	; 0x10
 892:	5f 84       	ldd	r5, Y+15	; 0x0f
 894:	6e 84       	ldd	r6, Y+14	; 0x0e
 896:	7d 84       	ldd	r7, Y+13	; 0x0d
 898:	8c 84       	ldd	r8, Y+12	; 0x0c
 89a:	9b 84       	ldd	r9, Y+11	; 0x0b
 89c:	aa 84       	ldd	r10, Y+10	; 0x0a
 89e:	b9 84       	ldd	r11, Y+9	; 0x09
 8a0:	c8 84       	ldd	r12, Y+8	; 0x08
 8a2:	df 80       	ldd	r13, Y+7	; 0x07
 8a4:	ee 80       	ldd	r14, Y+6	; 0x06
 8a6:	fd 80       	ldd	r15, Y+5	; 0x05
 8a8:	0c 81       	ldd	r16, Y+4	; 0x04
 8aa:	1b 81       	ldd	r17, Y+3	; 0x03
 8ac:	aa 81       	ldd	r26, Y+2	; 0x02
 8ae:	b9 81       	ldd	r27, Y+1	; 0x01
 8b0:	ce 0f       	add	r28, r30
 8b2:	d1 1d       	adc	r29, r1
 8b4:	0f b6       	in	r0, 0x3f	; 63
 8b6:	f8 94       	cli
 8b8:	de bf       	out	0x3e, r29	; 62
 8ba:	0f be       	out	0x3f, r0	; 63
 8bc:	cd bf       	out	0x3d, r28	; 61
 8be:	ed 01       	movw	r28, r26
 8c0:	08 95       	ret

000008c2 <_exit>:
 8c2:	f8 94       	cli

000008c4 <__stop_program>:
 8c4:	ff cf       	rjmp	.-2      	; 0x8c4 <__stop_program>
